{"version":3,"sources":["../../../../src/views/common/api.js"],"names":["getShopList","getShopData","getPhoneBrand","getPhoneModel","getPhoneProblem","getChildrenProblem","getShopListSort","getuserinforByopenId","reguser","updateuserinfo","sureOrder","getaddressById","addAddress","editAddress","delAddress","addNewQuestion","getQuestionList","replyQuestion","getQuestionListById","ajax","url","resolve","reject","get","then","res","err","shopId","shopid","req","post","data","openId","id"],"mappings":"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","file":"api.js","sourcesContent":["import ajaxLib from '../../lib/ajax';\nconst ajax = ajaxLib.ajax;\n// const url = 'https://m.yixiutech.com';\nconst url = \"https://yixiu.natappvip.cc\";\n\n//获取商家列表\nexport function getShopList() {\n  return new Promise((resolve, reject) => {\n    ajax.get(url + '/shop').then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n//获取商家详情\nexport function getShopData(shopId) {\n  return new Promise((resolve, reject) => {\n    ajax.get(`${url}/shop/${shopId}`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n\n//  获取手机品牌\nexport function getPhoneBrand(shopid) {\n  return new Promise((resolve, reject) => {\n    ajax.get(`${url}/phone/manufacturer/shop/${shopid}`).then((res) => {\n      // ajax.get(`${url}/phone/manufacturer`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n\n// 根据店铺id和品牌id获取店铺支持的手机型号\nexport function getPhoneModel(req) {\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/phone/model/shop`, req).then((res) => {\n      // ajax.get(`${url}/phone/model/${req.manufacturer}`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n\n// 获取热门手机维修服务分类\nexport function getPhoneProblem(data) {\n  return new Promise((resolve, reject) => {\n    ajax.get(`${url}/category/shop/${data}`).then((res) => {\n      // ajax.get(`${url}/category/phoneRepair`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n\n// 根据商铺id和分类id以及手机型号 获取 某个商铺的某个分类下支持的某些手机型号 的具体维修服务\nexport function getChildrenProblem(data) {\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/service/shop`, data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n\n//根据筛选条件获取商家列表\nexport function getShopListSort(data) {\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/shop/filter`, data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n\n//通过openid查询用户信息\nexport function getuserinforByopenId(openId){\n  return new Promise((resolve, reject) => {\n    ajax.get(url + '/user/openid/' + openId).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n//根据微信信息注册用户\nexport function reguser(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(url + '/user/reg/', data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n//更新用户信息\nexport function updateuserinfo(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(url + '/user/update', data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n//  确认下单\nexport function sureOrder(data) {\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/order/service`, data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    })\n  })\n}\n// 获取地址列表\nexport function getaddressById(id){\n  return new Promise((resolve, reject) => {\n    ajax.get(`${url}/address/user/${id}`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n\n// 添加地址\nexport function addAddress(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/address`, data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n\n// 更新地址\nexport function editAddress(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/address/update`, data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n// 删除地址\nexport function delAddress(id){\n  return new Promise((resolve, reject) => {\n    ajax.get(`${url}/address/delete/${id}`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n// 发起问题\nexport function addNewQuestion(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/question`,data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n// 根据筛选条件获取问题详情\nexport function getQuestionList(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/question/filter`,data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n\n\n// 回复问题\nexport function replyQuestion(data){\n  return new Promise((resolve, reject) => {\n    ajax.post(`${url}/question/reply`,data).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n\n// 通过ID查询\nexport function getQuestionListById(id){\n  return new Promise((resolve, reject) => {\n    ajax.get(`${url}/question/user/${id}`).then((res) => {\n      resolve(res);\n    }).then((err) => {\n      reject(err);\n    });\n  });\n}\n"]}